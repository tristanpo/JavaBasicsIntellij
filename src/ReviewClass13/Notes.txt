Lists should be used when we have to store single elements as a collection.
    1) They maintain the insertion order.
    2) They allow us to store duplicate elements
    3) They are dynamic in size
    4) data is stored based on indexes like arrays
Two famous classes that implement the List interface are
    1)ArrayList
    2)LinkedList
ArrayList
    1)When most of the operations(70%-90%) are storing new data at the end of the list and
    reading data no manipulation(adding or removing shifting of data)
     of data then we should go with ArrayList.
LinkedList
    1)When most of the operations(70%-90%) are storing new data in-between or at the start of the list
    then we should go with the linkedList
In real life 90% of times ArrayList is used.
Sets
    Sets also store single values but they don't allow duplicate.
    1)Hashset 2) LinkedHashSet 3) TreeSet.
HashSet(90% of the time it is used in real life)
    1) it does not maintain the insertion order
    fastest when it comes to insertion and retrieval speed
LinkedHashSet
    1)Maintains the insertion order
    insertion is slower than HashSet but faster than Treeset.
    retrieval is slowest
TreeSet
    1)Sorts the data in natural order
    2) insertion is slowest
    3) faster than the linkedHashSet but slower than the HashSet
Map
    1)Map is data structure that can store the data in the form of key value pairs.
    we can use any real life info as key for example SSN number, PhoneNumber
    2)Searching in Maps is superfast.
1) HashMap 2) LinkedHashMap 3) TreeMap 4) HashTable
HashMap
    Fastest most widely used but does not maintain the insertion order
LinkedHashMap
    1) Maintains the insertion order
    2)slower than HashMap but faster than TreeMap
    3) slowest of all four
TreeMap
    1) Data is stored in sorted form
    2) insertion is slowest
    3) Better than linkedHashMap but slower than HashMap.
FileHandling in java:

